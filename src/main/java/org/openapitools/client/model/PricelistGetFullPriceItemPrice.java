/*
 * pricelist/service.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.PricelistMoney;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import GeminiCommerce_Pricelist.JSON;

/**
 * PricelistGetFullPriceItemPrice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-29T16:16:38.230943551Z[Etc/UTC]")
public class PricelistGetFullPriceItemPrice {
  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private PricelistMoney price;

  public static final String SERIALIZED_NAME_IS_ENABLED = "isEnabled";
  @SerializedName(SERIALIZED_NAME_IS_ENABLED)
  private Boolean isEnabled;

  public static final String SERIALIZED_NAME_START_AT = "startAt";
  @SerializedName(SERIALIZED_NAME_START_AT)
  private OffsetDateTime startAt;

  public static final String SERIALIZED_NAME_END_AT = "endAt";
  @SerializedName(SERIALIZED_NAME_END_AT)
  private OffsetDateTime endAt;

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private Long order;

  public static final String SERIALIZED_NAME_BASE_PRICE = "basePrice";
  @SerializedName(SERIALIZED_NAME_BASE_PRICE)
  private PricelistMoney basePrice;

  public PricelistGetFullPriceItemPrice() {
  }

  public PricelistGetFullPriceItemPrice price(PricelistMoney price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  public PricelistMoney getPrice() {
    return price;
  }

  public void setPrice(PricelistMoney price) {
    this.price = price;
  }


  public PricelistGetFullPriceItemPrice isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

   /**
   * Get isEnabled
   * @return isEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public PricelistGetFullPriceItemPrice startAt(OffsetDateTime startAt) {
    this.startAt = startAt;
    return this;
  }

   /**
   * Get startAt
   * @return startAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getStartAt() {
    return startAt;
  }

  public void setStartAt(OffsetDateTime startAt) {
    this.startAt = startAt;
  }


  public PricelistGetFullPriceItemPrice endAt(OffsetDateTime endAt) {
    this.endAt = endAt;
    return this;
  }

   /**
   * Get endAt
   * @return endAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getEndAt() {
    return endAt;
  }

  public void setEndAt(OffsetDateTime endAt) {
    this.endAt = endAt;
  }


  public PricelistGetFullPriceItemPrice order(Long order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @javax.annotation.Nullable
  public Long getOrder() {
    return order;
  }

  public void setOrder(Long order) {
    this.order = order;
  }


  public PricelistGetFullPriceItemPrice basePrice(PricelistMoney basePrice) {
    this.basePrice = basePrice;
    return this;
  }

   /**
   * Get basePrice
   * @return basePrice
  **/
  @javax.annotation.Nullable
  public PricelistMoney getBasePrice() {
    return basePrice;
  }

  public void setBasePrice(PricelistMoney basePrice) {
    this.basePrice = basePrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PricelistGetFullPriceItemPrice pricelistGetFullPriceItemPrice = (PricelistGetFullPriceItemPrice) o;
    return Objects.equals(this.price, pricelistGetFullPriceItemPrice.price) &&
        Objects.equals(this.isEnabled, pricelistGetFullPriceItemPrice.isEnabled) &&
        Objects.equals(this.startAt, pricelistGetFullPriceItemPrice.startAt) &&
        Objects.equals(this.endAt, pricelistGetFullPriceItemPrice.endAt) &&
        Objects.equals(this.order, pricelistGetFullPriceItemPrice.order) &&
        Objects.equals(this.basePrice, pricelistGetFullPriceItemPrice.basePrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(price, isEnabled, startAt, endAt, order, basePrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PricelistGetFullPriceItemPrice {\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    startAt: ").append(toIndentedString(startAt)).append("\n");
    sb.append("    endAt: ").append(toIndentedString(endAt)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    basePrice: ").append(toIndentedString(basePrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("price");
    openapiFields.add("isEnabled");
    openapiFields.add("startAt");
    openapiFields.add("endAt");
    openapiFields.add("order");
    openapiFields.add("basePrice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to PricelistGetFullPriceItemPrice
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PricelistGetFullPriceItemPrice.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PricelistGetFullPriceItemPrice is not found in the empty JSON string", PricelistGetFullPriceItemPrice.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PricelistGetFullPriceItemPrice.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PricelistGetFullPriceItemPrice` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `price`
      if (jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) {
        PricelistMoney.validateJsonElement(jsonObj.get("price"));
      }
      // validate the optional field `basePrice`
      if (jsonObj.get("basePrice") != null && !jsonObj.get("basePrice").isJsonNull()) {
        PricelistMoney.validateJsonElement(jsonObj.get("basePrice"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PricelistGetFullPriceItemPrice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PricelistGetFullPriceItemPrice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PricelistGetFullPriceItemPrice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PricelistGetFullPriceItemPrice.class));

       return (TypeAdapter<T>) new TypeAdapter<PricelistGetFullPriceItemPrice>() {
           @Override
           public void write(JsonWriter out, PricelistGetFullPriceItemPrice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PricelistGetFullPriceItemPrice read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PricelistGetFullPriceItemPrice given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PricelistGetFullPriceItemPrice
  * @throws IOException if the JSON string is invalid with respect to PricelistGetFullPriceItemPrice
  */
  public static PricelistGetFullPriceItemPrice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PricelistGetFullPriceItemPrice.class);
  }

 /**
  * Convert an instance of PricelistGetFullPriceItemPrice to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

